{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kruno\\\\ReactJS\\\\React Udemy Course\\\\Section20-MultiPage-SPA-Router\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventDetailPage.js\",\n  _s = $RefreshSig$();\nimport { json /* , useParams */ /* , useLoaderData */, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  /* const params = useParams(); */\n  /* const data = useLoaderData(); */\n  const data = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(EventDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport const loader = async _ref => {\n  let {\n    request,\n    params\n  } = _ref;\n  const eventID = params.eventID; //eventID je parametar iz App.js\n  const response = await fetch(\"http://localhost:8080/events/\" + eventID);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["json","useRouteLoaderData","EventItem","EventDetailPage","data","event","loader","request","params","eventID","response","fetch","ok","message","status"],"sources":["C:/Users/Kruno/ReactJS/React Udemy Course/Section20-MultiPage-SPA-Router/12-adv-starting-project/frontend/src/pages/EventDetailPage.js"],"sourcesContent":["import {\r\n  json /* , useParams */ /* , useLoaderData */,\r\n  useRouteLoaderData,\r\n} from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\";\r\n\r\nconst EventDetailPage = () => {\r\n  /* const params = useParams(); */\r\n  /* const data = useLoaderData(); */\r\n  const data = useRouteLoaderData(\"event-detail\");\r\n  return (\r\n    <>\r\n      <EventItem event={data.event} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventDetailPage;\r\n\r\nexport const loader = async ({ request, params }) => {\r\n  const eventID = params.eventID; //eventID je parametar iz App.js\r\n  const response = await fetch(\"http://localhost:8080/events/\" + eventID);\r\n\r\n  if (!response.ok) {\r\n    throw json(\r\n      { message: \"Could not fetch details for selected event.\" },\r\n      {\r\n        status: 500,\r\n      }\r\n    );\r\n  } else {\r\n    return response;\r\n  }\r\n};\r\n"],"mappings":";;AAAA,SACEA,IAAI,CAAC,kBAAkB,uBACvBC,kBAAkB,QACb,kBAAkB;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAAC;AAAA;AAEhD,MAAMC,eAAe,GAAG,MAAM;EAAA;EAC5B;EACA;EACA,MAAMC,IAAI,GAAGH,kBAAkB,CAAC,cAAc,CAAC;EAC/C,oBACE;IAAA,uBACE,QAAC,SAAS;MAAC,KAAK,EAAEG,IAAI,CAACC;IAAM;MAAA;MAAA;MAAA;IAAA;EAAG,iBAC/B;AAEP,CAAC;AAAC,GATIF,eAAe;EAAA,QAGNF,kBAAkB;AAAA;AAAA,KAH3BE,eAAe;AAWrB,eAAeA,eAAe;AAE9B,OAAO,MAAMG,MAAM,GAAG,cAA+B;EAAA,IAAxB;IAAEC,OAAO;IAAEC;EAAO,CAAC;EAC9C,MAAMC,OAAO,GAAGD,MAAM,CAACC,OAAO,CAAC,CAAC;EAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGF,OAAO,CAAC;EAEvE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMZ,IAAI,CACR;MAAEa,OAAO,EAAE;IAA8C,CAAC,EAC1D;MACEC,MAAM,EAAE;IACV,CAAC,CACF;EACH,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}