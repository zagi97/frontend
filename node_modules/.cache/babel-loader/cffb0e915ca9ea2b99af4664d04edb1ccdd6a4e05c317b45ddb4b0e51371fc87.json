{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kruno\\\\ReactJS\\\\React Udemy Course\\\\Section20-MultiPage-SPA-Router\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventsPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventsPage = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [fetchedEvents, setFetchedEvents] = useState();\n  const [error, setError] = useState();\n  useEffect(() => {\n    const fetchEvents = async () => {\n      setIsLoading(true);\n      const response = await fetch(\"http://localhost:8080/events\");\n      if (!response.ok) {\n        setError(\"Fetching events failed.\");\n      } else {\n        const resData = await response.json();\n        setFetchedEvents(resData.events);\n      }\n      setIsLoading(false);\n    };\n    fetchEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 23\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), !isLoading && fetchedEvents && /*#__PURE__*/_jsxDEV(EventsList, {\n      events: fetchedEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 39\n    }, this)]\n  }, void 0, true);\n};\n_s(EventsPage, \"qNzRHA+sE7qujjZhWBEU6UvtUuo=\");\n_c = EventsPage;\nexport default EventsPage;\n\n/* import { Link } from \"react-router-dom\";\r\n\r\nconst DUMMY_EVENTS = [\r\n  {\r\n    id: \"event-1\",\r\n    title: \"Concert\",\r\n  },\r\n  {\r\n    id: \"event-2\",\r\n    title: \"Football match\",\r\n  },\r\n  {\r\n    id: \"event-3\",\r\n    title: \"Stand-up comedy\",\r\n  },\r\n  {\r\n    id: \"event-4\",\r\n    title: \"Knowledge quiz\",\r\n  },\r\n];\r\n\r\nconst EventsPage = () => {\r\n  return (\r\n    <>\r\n      <h1>This is page where you can find every events!</h1>\r\n      <p>Search for some...</p>\r\n      <ul>\r\n        {DUMMY_EVENTS.map((event) => (\r\n          <li key={event.id}>\r\n            <Link to={event.id}>{event.title}</Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventsPage;\r\n */\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useEffect","useState","EventsList","EventsPage","isLoading","setIsLoading","fetchedEvents","setFetchedEvents","error","setError","fetchEvents","response","fetch","ok","resData","json","events","textAlign"],"sources":["C:/Users/Kruno/ReactJS/React Udemy Course/Section20-MultiPage-SPA-Router/12-adv-starting-project/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nimport EventsList from \"../components/EventsList\";\r\n\r\nconst EventsPage = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [fetchedEvents, setFetchedEvents] = useState();\r\n  const [error, setError] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      setIsLoading(true);\r\n      const response = await fetch(\"http://localhost:8080/events\");\r\n\r\n      if (!response.ok) {\r\n        setError(\"Fetching events failed.\");\r\n      } else {\r\n        const resData = await response.json();\r\n        setFetchedEvents(resData.events);\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n\r\n    fetchEvents();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: \"center\" }}>\r\n        {isLoading && <p>Loading...</p>}\r\n        {error && <p>{error}</p>}\r\n      </div>\r\n      {!isLoading && fetchedEvents && <EventsList events={fetchedEvents} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventsPage;\r\n\r\n/* import { Link } from \"react-router-dom\";\r\n\r\nconst DUMMY_EVENTS = [\r\n  {\r\n    id: \"event-1\",\r\n    title: \"Concert\",\r\n  },\r\n  {\r\n    id: \"event-2\",\r\n    title: \"Football match\",\r\n  },\r\n  {\r\n    id: \"event-3\",\r\n    title: \"Stand-up comedy\",\r\n  },\r\n  {\r\n    id: \"event-4\",\r\n    title: \"Knowledge quiz\",\r\n  },\r\n];\r\n\r\nconst EventsPage = () => {\r\n  return (\r\n    <>\r\n      <h1>This is page where you can find every events!</h1>\r\n      <p>Search for some...</p>\r\n      <ul>\r\n        {DUMMY_EVENTS.map((event) => (\r\n          <li key={event.id}>\r\n            <Link to={event.id}>{event.title}</Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventsPage;\r\n */\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAOC,UAAU,MAAM,0BAA0B;AAAC;AAAA;AAElD,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACK,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,EAAE;EACpD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,EAAE;EAEpCD,SAAS,CAAC,MAAM;IACd,MAAMU,WAAW,GAAG,YAAY;MAC9BL,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;MAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChBJ,QAAQ,CAAC,yBAAyB,CAAC;MACrC,CAAC,MAAM;QACL,MAAMK,OAAO,GAAG,MAAMH,QAAQ,CAACI,IAAI,EAAE;QACrCR,gBAAgB,CAACO,OAAO,CAACE,MAAM,CAAC;MAClC;MACAX,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;IAEDK,WAAW,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EACN,oBACE;IAAA,wBACE;MAAK,KAAK,EAAE;QAAEO,SAAS,EAAE;MAAS,CAAE;MAAA,WACjCb,SAAS,iBAAI;QAAA,UAAG;MAAU;QAAA;QAAA;QAAA;MAAA,QAAI,EAC9BI,KAAK,iBAAI;QAAA,UAAIA;MAAK;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACpB,EACL,CAACJ,SAAS,IAAIE,aAAa,iBAAI,QAAC,UAAU;MAAC,MAAM,EAAEA;IAAc;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACpE;AAEP,CAAC;AAAC,GA9BIH,UAAU;AAAA,KAAVA,UAAU;AAgChB,eAAeA,UAAU;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtCA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}