{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kruno\\\\ReactJS\\\\React Udemy Course\\\\Section20-MultiPage-SPA-Router\\\\12-adv-starting-project\\\\frontend\\\\src\\\\App.js\";\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport EventsPage from \"./pages/EventsPage\";\nimport EventDetailPage from \"./pages/EventDetailPage\";\nimport NewEventPage from \"./pages/NewEventPage\";\nimport EditEventPage from \"./pages/EditEventPage\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 14\n  }, this),\n  children: [{\n    path: \"/events\",\n    element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 18\n    }, this)\n  }, {\n    path: \"/events/eventID\",\n    element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 18\n    }, this)\n  }, {\n    path: \"/events/new\",\n    element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 18\n    }, this)\n  }, {\n    path: \"/events/eventID/edit\",\n    element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 18\n    }, this)\n  }]\n}]);\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","HomePage","EventsPage","EventDetailPage","NewEventPage","EditEventPage","router","path","element","children","App"],"sources":["C:/Users/Kruno/ReactJS/React Udemy Course/Section20-MultiPage-SPA-Router/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["import { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport EventsPage from \"./pages/EventsPage\";\nimport EventDetailPage from \"./pages/EventDetailPage\";\nimport NewEventPage from \"./pages/NewEventPage\";\nimport EditEventPage from \"./pages/EditEventPage\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <HomePage />,\n    children: [\n      {\n        path: \"/events\",\n        element: <EventsPage />,\n      },\n      {\n        path: \"/events/eventID\",\n        element: <EventDetailPage />,\n      },\n      {\n        path: \"/events/new\",\n        element: <NewEventPage />,\n      },\n      {\n        path: \"/events/eventID/edit\",\n        element: <EditEventPage />,\n      },\n    ],\n  },\n]);\n\nconst App = () => {\n  return <RouterProvider router={router} />;\n};\n\nexport default App;\n"],"mappings":";AAAA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,eAAe,MAAM,yBAAyB;AACrD,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,aAAa,MAAM,uBAAuB;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA,MAAMC,MAAM,GAAGP,mBAAmB,CAAC,CACjC;EACEQ,IAAI,EAAE,GAAG;EACTC,OAAO,eAAE,QAAC,QAAQ;IAAA;IAAA;IAAA;EAAA,QAAG;EACrBC,QAAQ,EAAE,CACR;IACEF,IAAI,EAAE,SAAS;IACfC,OAAO,eAAE,QAAC,UAAU;MAAA;MAAA;MAAA;IAAA;EACtB,CAAC,EACD;IACED,IAAI,EAAE,iBAAiB;IACvBC,OAAO,eAAE,QAAC,eAAe;MAAA;MAAA;MAAA;IAAA;EAC3B,CAAC,EACD;IACED,IAAI,EAAE,aAAa;IACnBC,OAAO,eAAE,QAAC,YAAY;MAAA;MAAA;MAAA;IAAA;EACxB,CAAC,EACD;IACED,IAAI,EAAE,sBAAsB;IAC5BC,OAAO,eAAE,QAAC,aAAa;MAAA;MAAA;MAAA;IAAA;EACzB,CAAC;AAEL,CAAC,CACF,CAAC;AAEF,MAAME,GAAG,GAAG,MAAM;EAChB,oBAAO,QAAC,cAAc;IAAC,MAAM,EAAEJ;EAAO;IAAA;IAAA;IAAA;EAAA,QAAG;AAC3C,CAAC;AAAC,KAFII,GAAG;AAIT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}